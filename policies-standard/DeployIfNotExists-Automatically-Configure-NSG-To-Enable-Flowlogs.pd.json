{
  "properties":{
	  "policyType": "Custom",
	  "mode": "Indexed",
	  "displayName": "DeployIfNotExists-Automatically-Configure-NSG-To-Enable-Flowlogs",
	  "description": "Implements the Azure Flow Logs on NSGs. The logs are collected to the centrally managed storage account. There are no changes if NSG Flow Logs are already enabled at the time of this policy deployment, irrespective of storage account location",
	  "policyRule": {
		"if": {
		  "allOf": [
			{
			  "field": "type",
			  "equals": "Microsoft.Network/networkSecurityGroups"
			},
			{
			  "field": "location",
			  "equals": "[field('location')]"
			}
		  ]
		},
		"then": {
		  "effect": "deployIfNotExists",
		  "details": {
			"type": "Microsoft.Network/networkWatchers/flowlogs",
			"resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
			"name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
			"existenceCondition": {
			  "allOf": [
				{
				  "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
				  "equals": "true"
				},
				{
				  "field": "location",
				  "equals": "[field('location')]"
				}
			  ]
			},
			"roleDefinitionIds": [
			  "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
			],
			"deployment": {
			  "properties": {
				"mode": "incremental",
				"template": {
				  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
				  "contentVersion": "1.0.0.0",
				  "parameters": {
					"storageId": {
					  "type": "String"
					},
					"networkWatcherRG": {
					  "type": "String"
					},
					"networkWatcherName": {
					  "type": "String"
					},
					"flowlogName": {
					  "type": "String"
					},
					"location": {
					  "type": "String"
					},
					"targetResource": {
					  "type": "string"
					}
				  },
				  "resources": [
					{
					  "type": "Microsoft.Resources/deployments",
					  "name": "[concat('flowlogDeployment-', uniqueString(parameters('flowlogName')))]",
					  "apiVersion": "2019-10-01",
					  "resourceGroup": "[parameters('networkWatcherRG')]",
					  "properties": {
						"mode": "incremental",
						"parameters": {},
						"template": {
						  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
						  "contentVersion": "1.0.0.0",
						  "parameters": {},
						  "resources": [
							{
							  "type": "Microsoft.Network/networkWatchers/flowLogs",
							  "name": "[concat(parameters('networkWatcherName'), '/', parameters('flowlogName'))]",
							  "apiVersion": "2019-11-01",
							  "location": "[parameters('location')]",
							  "properties": {
								"targetResourceId": "[parameters('targetResource')]",
								"storageId": "[parameters('storageId')]",
								"enabled": "true",
								"retentionPolicy": {
								  "days": "90",
								  "enabled": "true"
								},
								"format": {
								  "type": "JSON",
								  "version": 2
								}
							  }
							}
						  ]
						}
					  }
					}
				  ]
				},
				"parameters": {
				  "location": {
					"value": "[field('location')]"
				  },
				  "storageId": {
					"value": "[concat('/subscriptions/4ccddbc6-8cc2-431a-95ea-e70d4c020b2f/resourceGroups/cs-securitylogs/providers/Microsoft.Storage/storageAccounts/fl99', field('location'))]"
				  },
				  "networkWatcherRG": {
					"value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), 'NetworkWatcherRG', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]"
				  },
				  "networkWatcherName": {
					"value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), concat('networkWatcher_', field('location')), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8])]"
				  },
				  "flowlogName": {
					"value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), concat(take(field('name'),25), '-', take(resourceGroup().name,25), '-',uniqueString(utcNow()), '-flowlog'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10])]"
				  },
				  "targetResource": {
					"value": "[concat(resourceGroup().id, '/providers/Microsoft.Network/networkSecurityGroups/', field('name'))]"
				  }
				}
			  }
			}
		  }
		}
	  },
	  "metadata": {
		"category": "Network"
	  }
	}
}